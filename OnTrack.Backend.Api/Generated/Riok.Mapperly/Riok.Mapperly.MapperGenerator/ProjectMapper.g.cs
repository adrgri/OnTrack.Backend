// <auto-generated />
#nullable enable
namespace OnTrack.Backend.Api.Application.Mappings
{
    public sealed partial class ProjectMapper
    {
        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "3.4.0.0")]
        public override partial void ToExistingDomainModel(global::OnTrack.Backend.Api.Dto.ProjectDto dto, global::OnTrack.Backend.Api.Models.Project entity)
        {
            if (dto.TaskIds != null)
            {
                entity.Tasks = MapToList1(dto.TaskIds);
            }
            else
            {
                entity.Tasks = null;
            }
            entity.Title = dto.Title;
            entity.Description = dto.Description;
            entity.Members = MapToList(dto.MemberIds);
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "3.4.0.0")]
        public override partial void ToExistingDto(global::OnTrack.Backend.Api.Models.Project entity, global::OnTrack.Backend.Api.Dto.ProjectDto dto)
        {
            if (entity.Tasks != null)
            {
                dto.TaskIds = MapToList3(entity.Tasks);
            }
            else
            {
                dto.TaskIds = null;
            }
            dto.Title = entity.Title;
            dto.Description = entity.Description;
            dto.MemberIds = MapToList2(entity.Members);
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "3.4.0.0")]
        public override partial global::OnTrack.Backend.Api.Models.Project ToNewDomainModel(global::OnTrack.Backend.Api.Dto.ProjectDto dto)
        {
            var target = new global::OnTrack.Backend.Api.Models.Project();
            if (dto.TaskIds != null)
            {
                target.Tasks = MapToList1(dto.TaskIds);
            }
            else
            {
                target.Tasks = null;
            }
            target.Title = dto.Title;
            target.Description = dto.Description;
            target.Members = MapToList(dto.MemberIds);
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "3.4.0.0")]
        public override partial global::OnTrack.Backend.Api.Dto.ProjectDto ToNewDto(global::OnTrack.Backend.Api.Models.Project entity)
        {
            var target = new global::OnTrack.Backend.Api.Dto.ProjectDto();
            if (entity.Tasks != null)
            {
                target.TaskIds = MapToList3(entity.Tasks);
            }
            else
            {
                target.TaskIds = null;
            }
            target.Title = entity.Title;
            target.Description = entity.Description;
            target.MemberIds = MapToList2(entity.Members);
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "3.4.0.0")]
        private global::System.Collections.Generic.List<global::OnTrack.Backend.Api.Models.AppUser> MapToList(global::System.Collections.Generic.ICollection<global::OnTrack.Backend.Api.Models.IdentitySystemObjectId> source)
        {
            var target = new global::System.Collections.Generic.List<global::OnTrack.Backend.Api.Models.AppUser>(source.Count);
            foreach (var item in source)
            {
                target.Add(AppUserMapper.FromId(item));
            }
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "3.4.0.0")]
        private global::System.Collections.Generic.List<global::OnTrack.Backend.Api.Models.Task> MapToList1(global::System.Collections.Generic.ICollection<global::OnTrack.Backend.Api.Models.TaskId> source)
        {
            var target = new global::System.Collections.Generic.List<global::OnTrack.Backend.Api.Models.Task>(source.Count);
            foreach (var item in source)
            {
                target.Add(TaskMapper.FromId(item));
            }
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "3.4.0.0")]
        private global::System.Collections.Generic.List<global::OnTrack.Backend.Api.Models.IdentitySystemObjectId> MapToList2(global::System.Collections.Generic.ICollection<global::OnTrack.Backend.Api.Models.AppUser> source)
        {
            var target = new global::System.Collections.Generic.List<global::OnTrack.Backend.Api.Models.IdentitySystemObjectId>(source.Count);
            foreach (var item in source)
            {
                target.Add(AppUserMapper.ToId(item));
            }
            return target;
        }

        [global::System.CodeDom.Compiler.GeneratedCode("Riok.Mapperly", "3.4.0.0")]
        private global::System.Collections.Generic.List<global::OnTrack.Backend.Api.Models.TaskId> MapToList3(global::System.Collections.Generic.ICollection<global::OnTrack.Backend.Api.Models.Task> source)
        {
            var target = new global::System.Collections.Generic.List<global::OnTrack.Backend.Api.Models.TaskId>(source.Count);
            foreach (var item in source)
            {
                target.Add(TaskMapper.ToId(item));
            }
            return target;
        }
    }
}