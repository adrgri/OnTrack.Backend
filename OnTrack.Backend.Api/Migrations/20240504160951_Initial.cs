// <auto-generated />
using Microsoft.EntityFrameworkCore.Migrations;

#nullable disable

namespace OnTrack.Backend.Api.Migrations;

/// <inheritdoc />
public partial class Initial : Migration
{
	/// <inheritdoc />
	protected override void Up(MigrationBuilder migrationBuilder)
	{
		migrationBuilder.CreateTable(
			name: "AspNetRoles",
			columns: table => new
			{
				Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				Name = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
				NormalizedName = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
				ConcurrencyStamp = table.Column<string>(type: "nvarchar(max)", nullable: true)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_AspNetRoles", x => x.Id)
					.Annotation("SqlServer:Clustered", false);
			});

		migrationBuilder.CreateTable(
			name: "Icons",
			columns: table => new
			{
				Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				Name = table.Column<string>(type: "nvarchar(max)", nullable: false)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_Icons", x => x.Id)
					.Annotation("SqlServer:Clustered", false);
			});

		migrationBuilder.CreateTable(
			name: "Languages",
			columns: table => new
			{
				Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				Code = table.Column<string>(type: "nvarchar(max)", nullable: false),
				Name = table.Column<string>(type: "nvarchar(max)", nullable: false)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_Languages", x => x.Id)
					.Annotation("SqlServer:Clustered", false);
			});

		migrationBuilder.CreateTable(
			name: "Projects",
			columns: table => new
			{
				Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				Title = table.Column<string>(type: "nvarchar(max)", nullable: false),
				Description = table.Column<string>(type: "nvarchar(max)", nullable: true)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_Projects", x => x.Id)
					.Annotation("SqlServer:Clustered", false);
			});

		migrationBuilder.CreateTable(
			name: "Statuses",
			columns: table => new
			{
				Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				Name = table.Column<string>(type: "nvarchar(max)", nullable: false),
				Order = table.Column<int>(type: "int", nullable: false)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_Statuses", x => x.Id)
					.Annotation("SqlServer:Clustered", false);
			});

		migrationBuilder.CreateTable(
			name: "AspNetRoleClaims",
			columns: table => new
			{
				Id = table.Column<int>(type: "int", nullable: false)
					.Annotation("SqlServer:Identity", "1, 1"),
				RoleId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				ClaimType = table.Column<string>(type: "nvarchar(max)", nullable: true),
				ClaimValue = table.Column<string>(type: "nvarchar(max)", nullable: true)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_AspNetRoleClaims", x => x.Id);
				table.ForeignKey(
					name: "FK_AspNetRoleClaims_AspNetRoles_RoleId",
					column: x => x.RoleId,
					principalTable: "AspNetRoles",
					principalColumn: "Id",
					onDelete: ReferentialAction.Cascade);
			});

		migrationBuilder.CreateTable(
			name: "Tasks",
			columns: table => new
			{
				Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				ProjectId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				Title = table.Column<string>(type: "nvarchar(max)", nullable: false),
				Description = table.Column<string>(type: "nvarchar(max)", nullable: true),
				StartDate = table.Column<DateTime>(type: "datetime2", nullable: true),
				DueDate = table.Column<DateTime>(type: "datetime2", nullable: true),
				StatusId = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
				IconId = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
				IsCompleted = table.Column<bool>(type: "bit", nullable: false),
				TaskId = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_Tasks", x => x.Id)
					.Annotation("SqlServer:Clustered", false);
				table.ForeignKey(
					name: "FK_Tasks_Icons_IconId",
					column: x => x.IconId,
					principalTable: "Icons",
					principalColumn: "Id");
				table.ForeignKey(
					name: "FK_Tasks_Projects_ProjectId",
					column: x => x.ProjectId,
					principalTable: "Projects",
					principalColumn: "Id",
					onDelete: ReferentialAction.Cascade);
				table.ForeignKey(
					name: "FK_Tasks_Statuses_StatusId",
					column: x => x.StatusId,
					principalTable: "Statuses",
					principalColumn: "Id");
				table.ForeignKey(
					name: "FK_Tasks_Tasks_TaskId",
					column: x => x.TaskId,
					principalTable: "Tasks",
					principalColumn: "Id");
			});

		migrationBuilder.CreateTable(
			name: "AspNetUsers",
			columns: table => new
			{
				Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				FirstName = table.Column<string>(type: "nvarchar(max)", nullable: true),
				LastName = table.Column<string>(type: "nvarchar(max)", nullable: true),
				Bio = table.Column<string>(type: "nvarchar(max)", nullable: true),
				LanguageId = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
				TaskId = table.Column<Guid>(type: "uniqueidentifier", nullable: true),
				UserName = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
				NormalizedUserName = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
				Email = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
				NormalizedEmail = table.Column<string>(type: "nvarchar(256)", maxLength: 256, nullable: true),
				EmailConfirmed = table.Column<bool>(type: "bit", nullable: false),
				PasswordHash = table.Column<string>(type: "nvarchar(max)", nullable: true),
				SecurityStamp = table.Column<string>(type: "nvarchar(max)", nullable: true),
				ConcurrencyStamp = table.Column<string>(type: "nvarchar(max)", nullable: true),
				PhoneNumber = table.Column<string>(type: "nvarchar(max)", nullable: true),
				PhoneNumberConfirmed = table.Column<bool>(type: "bit", nullable: false),
				TwoFactorEnabled = table.Column<bool>(type: "bit", nullable: false),
				LockoutEnd = table.Column<DateTimeOffset>(type: "datetimeoffset", nullable: true),
				LockoutEnabled = table.Column<bool>(type: "bit", nullable: false),
				AccessFailedCount = table.Column<int>(type: "int", nullable: false)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_AspNetUsers", x => x.Id)
					.Annotation("SqlServer:Clustered", false);
				table.ForeignKey(
					name: "FK_AspNetUsers_Languages_LanguageId",
					column: x => x.LanguageId,
					principalTable: "Languages",
					principalColumn: "Id");
				table.ForeignKey(
					name: "FK_AspNetUsers_Tasks_TaskId",
					column: x => x.TaskId,
					principalTable: "Tasks",
					principalColumn: "Id");
			});

		migrationBuilder.CreateTable(
			name: "Attachments",
			columns: table => new
			{
				Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				DisplayName = table.Column<string>(type: "nvarchar(max)", nullable: false),
				TaskId = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_Attachments", x => x.Id)
					.Annotation("SqlServer:Clustered", false);
				table.ForeignKey(
					name: "FK_Attachments_Tasks_TaskId",
					column: x => x.TaskId,
					principalTable: "Tasks",
					principalColumn: "Id");
			});

		migrationBuilder.CreateTable(
			name: "Resources",
			columns: table => new
			{
				Id = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				Name = table.Column<string>(type: "nvarchar(max)", nullable: false),
				Description = table.Column<string>(type: "nvarchar(max)", nullable: true),
				Quantity = table.Column<int>(type: "int", nullable: false),
				Unit = table.Column<string>(type: "nvarchar(max)", nullable: false),
				TaskId = table.Column<Guid>(type: "uniqueidentifier", nullable: true)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_Resources", x => x.Id)
					.Annotation("SqlServer:Clustered", false);
				table.ForeignKey(
					name: "FK_Resources_Tasks_TaskId",
					column: x => x.TaskId,
					principalTable: "Tasks",
					principalColumn: "Id");
			});

		migrationBuilder.CreateTable(
			name: "AppUserProject",
			columns: table => new
			{
				MembersId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				ProjectsId = table.Column<Guid>(type: "uniqueidentifier", nullable: false)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_AppUserProject", x => new { x.MembersId, x.ProjectsId });
				table.ForeignKey(
					name: "FK_AppUserProject_AspNetUsers_MembersId",
					column: x => x.MembersId,
					principalTable: "AspNetUsers",
					principalColumn: "Id",
					onDelete: ReferentialAction.Cascade);
				table.ForeignKey(
					name: "FK_AppUserProject_Projects_ProjectsId",
					column: x => x.ProjectsId,
					principalTable: "Projects",
					principalColumn: "Id",
					onDelete: ReferentialAction.Cascade);
			});

		migrationBuilder.CreateTable(
			name: "AspNetUserClaims",
			columns: table => new
			{
				Id = table.Column<int>(type: "int", nullable: false)
					.Annotation("SqlServer:Identity", "1, 1"),
				UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				ClaimType = table.Column<string>(type: "nvarchar(max)", nullable: true),
				ClaimValue = table.Column<string>(type: "nvarchar(max)", nullable: true)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_AspNetUserClaims", x => x.Id);
				table.ForeignKey(
					name: "FK_AspNetUserClaims_AspNetUsers_UserId",
					column: x => x.UserId,
					principalTable: "AspNetUsers",
					principalColumn: "Id",
					onDelete: ReferentialAction.Cascade);
			});

		migrationBuilder.CreateTable(
			name: "AspNetUserLogins",
			columns: table => new
			{
				LoginProvider = table.Column<string>(type: "nvarchar(450)", nullable: false),
				ProviderKey = table.Column<string>(type: "nvarchar(450)", nullable: false),
				ProviderDisplayName = table.Column<string>(type: "nvarchar(max)", nullable: true),
				UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_AspNetUserLogins", x => new { x.LoginProvider, x.ProviderKey });
				table.ForeignKey(
					name: "FK_AspNetUserLogins_AspNetUsers_UserId",
					column: x => x.UserId,
					principalTable: "AspNetUsers",
					principalColumn: "Id",
					onDelete: ReferentialAction.Cascade);
			});

		migrationBuilder.CreateTable(
			name: "AspNetUserRoles",
			columns: table => new
			{
				UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				RoleId = table.Column<Guid>(type: "uniqueidentifier", nullable: false)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_AspNetUserRoles", x => new { x.UserId, x.RoleId });
				table.ForeignKey(
					name: "FK_AspNetUserRoles_AspNetRoles_RoleId",
					column: x => x.RoleId,
					principalTable: "AspNetRoles",
					principalColumn: "Id",
					onDelete: ReferentialAction.Cascade);
				table.ForeignKey(
					name: "FK_AspNetUserRoles_AspNetUsers_UserId",
					column: x => x.UserId,
					principalTable: "AspNetUsers",
					principalColumn: "Id",
					onDelete: ReferentialAction.Cascade);
			});

		migrationBuilder.CreateTable(
			name: "AspNetUserTokens",
			columns: table => new
			{
				UserId = table.Column<Guid>(type: "uniqueidentifier", nullable: false),
				LoginProvider = table.Column<string>(type: "nvarchar(450)", nullable: false),
				Name = table.Column<string>(type: "nvarchar(450)", nullable: false),
				Value = table.Column<string>(type: "nvarchar(max)", nullable: true)
			},
			constraints: table =>
			{
				table.PrimaryKey("PK_AspNetUserTokens", x => new { x.UserId, x.LoginProvider, x.Name });
				table.ForeignKey(
					name: "FK_AspNetUserTokens_AspNetUsers_UserId",
					column: x => x.UserId,
					principalTable: "AspNetUsers",
					principalColumn: "Id",
					onDelete: ReferentialAction.Cascade);
			});

		migrationBuilder.CreateIndex(
			name: "IX_AppUserProject_ProjectsId",
			table: "AppUserProject",
			column: "ProjectsId");

		migrationBuilder.CreateIndex(
			name: "IX_AspNetRoleClaims_RoleId",
			table: "AspNetRoleClaims",
			column: "RoleId");

		migrationBuilder.CreateIndex(
			name: "RoleNameIndex",
			table: "AspNetRoles",
			column: "NormalizedName",
			unique: true,
			filter: "[NormalizedName] IS NOT NULL");

		migrationBuilder.CreateIndex(
			name: "IX_AspNetUserClaims_UserId",
			table: "AspNetUserClaims",
			column: "UserId");

		migrationBuilder.CreateIndex(
			name: "IX_AspNetUserLogins_UserId",
			table: "AspNetUserLogins",
			column: "UserId");

		migrationBuilder.CreateIndex(
			name: "IX_AspNetUserRoles_RoleId",
			table: "AspNetUserRoles",
			column: "RoleId");

		migrationBuilder.CreateIndex(
			name: "EmailIndex",
			table: "AspNetUsers",
			column: "NormalizedEmail");

		migrationBuilder.CreateIndex(
			name: "IX_AspNetUsers_LanguageId",
			table: "AspNetUsers",
			column: "LanguageId");

		migrationBuilder.CreateIndex(
			name: "IX_AspNetUsers_TaskId",
			table: "AspNetUsers",
			column: "TaskId");

		migrationBuilder.CreateIndex(
			name: "UserNameIndex",
			table: "AspNetUsers",
			column: "NormalizedUserName",
			unique: true,
			filter: "[NormalizedUserName] IS NOT NULL");

		migrationBuilder.CreateIndex(
			name: "IX_Attachments_TaskId",
			table: "Attachments",
			column: "TaskId");

		migrationBuilder.CreateIndex(
			name: "IX_Resources_TaskId",
			table: "Resources",
			column: "TaskId");

		migrationBuilder.CreateIndex(
			name: "IX_Tasks_IconId",
			table: "Tasks",
			column: "IconId");

		migrationBuilder.CreateIndex(
			name: "IX_Tasks_ProjectId",
			table: "Tasks",
			column: "ProjectId");

		migrationBuilder.CreateIndex(
			name: "IX_Tasks_StatusId",
			table: "Tasks",
			column: "StatusId");

		migrationBuilder.CreateIndex(
			name: "IX_Tasks_TaskId",
			table: "Tasks",
			column: "TaskId");
	}

	/// <inheritdoc />
	protected override void Down(MigrationBuilder migrationBuilder)
	{
		migrationBuilder.DropTable(
			name: "AppUserProject");

		migrationBuilder.DropTable(
			name: "AspNetRoleClaims");

		migrationBuilder.DropTable(
			name: "AspNetUserClaims");

		migrationBuilder.DropTable(
			name: "AspNetUserLogins");

		migrationBuilder.DropTable(
			name: "AspNetUserRoles");

		migrationBuilder.DropTable(
			name: "AspNetUserTokens");

		migrationBuilder.DropTable(
			name: "Attachments");

		migrationBuilder.DropTable(
			name: "Resources");

		migrationBuilder.DropTable(
			name: "AspNetRoles");

		migrationBuilder.DropTable(
			name: "AspNetUsers");

		migrationBuilder.DropTable(
			name: "Languages");

		migrationBuilder.DropTable(
			name: "Tasks");

		migrationBuilder.DropTable(
			name: "Icons");

		migrationBuilder.DropTable(
			name: "Projects");

		migrationBuilder.DropTable(
			name: "Statuses");
	}
}
